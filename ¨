#include "../include/day03.h"
#include <cctype>
#include <cstdlib>
#include <iostream>
#include <list>
#include <string>

void Day03::getOperations(std::ifstream &file, std::list<Operation *> &ops) {
  const char mul[] = {"mul"};
  int i = 0;
  char c;
  while (file.get(c)) {
    if (c == mul[i]) {
      i++;
    } else {
      i = 0;
    }
    if (3 == i) {
      // mul found
      i = 0;
      char p = file.peek();
      if (EOF == p) {
        return;
      }
      if ('(' != p) {
        continue;
      }
      file.get(c); // discard the peeked value

      // get value 1
      std::string v1 = "";
      p = file.peek();
      while (EOF != p && std::isdigit(p)) {
        file.get(c);
        v1.append(1, c);
      }
      if (EOF == p) {
        return;
      }
      if (',' != p) {
        continue;
      }
      if (v1.size() == 0) {
        continue;
      }
      file.get(c); // discard the peeked value

      // get value 2
      std::string v2 = "";
      p = file.peek();
      while (EOF != p && std::isdigit(p)) {
        file.get(c);
        v2.append(1, c);
      }
      if (EOF == p) {
        return;
      }
      if (')' != p) {
        continue;
      }
      if (v2.size() == 0) {
        continue;
      }
      file.get(c); // discard the peeked value

      // We now have a valid mul operation
      Operation *op = new Operation('*', std::stoi(v1), std::stoi(v2));
      ops.push_back(op);
    }
  }
}

void Day03::run(std::ifstream &file) {
  std::cout << "Executing Part 1" << std::endl;
  std::list<Operation *> ops;
  std::string line;
  getOperations(file, ops);

  int sum = 0;
  for (Operation *op : ops) {
    if ('*' == op->op) {
      sum += op->v1 * op->v2;
    }
  }

  // clean up
  for (auto op : ops) {
    delete op;
  }
  ops.clear();
}
